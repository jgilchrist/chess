#![cfg_attr(any(), rustfmt::skip)]

use crate::chess::square::{File, Rank};
use crate::engine::eval::PhasedEval;

pub const fn s(mg: i16, eg: i16) -> PhasedEval {
    PhasedEval::new(mg, eg)
}

pub type PieceSquareTableDefinition = [[PhasedEval; File::N]; Rank::N];

pub const PIECE_VALUES: [PhasedEval; 6] = [
    s(  113,   225),
    s(  269,   306),
    s(  285,   339),
    s(  376,   591),
    s(  771,  1125),
    s(    0,     0),
];

pub const PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(   56,   187), s(   98,   175), s(   64,   177), s(   99,   107), s(   80,   101), s(   58,   120), s(  -34,   182), s(  -72,   200)],
    [s(  -36,    98), s(  -13,   111), s(   26,    65), s(   31,    35), s(   36,    21), s(   67,     2), s(   47,    66), s(  -14,    61)],
    [s(  -50,    -3), s(  -15,   -17), s(  -15,   -43), s(   -9,   -56), s(   17,   -69), s(    4,   -64), s(   14,   -38), s(  -19,   -38)],
    [s(  -61,   -38), s(  -23,   -41), s(  -21,   -67), s(   -1,   -70), s(    4,   -74), s(   -5,   -73), s(   -3,   -55), s(  -33,   -65)],
    [s(  -57,   -48), s(  -28,   -44), s(  -24,   -69), s(  -16,   -54), s(    3,   -63), s(  -10,   -68), s(   20,   -58), s(  -19,   -72)],
    [s(  -53,   -43), s(  -23,   -39), s(  -32,   -59), s(  -24,   -43), s(  -10,   -41), s(   10,   -60), s(   35,   -59), s(  -30,   -71)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHTS: PieceSquareTableDefinition = [
    [s( -113,   -61), s( -140,     7), s(  -79,   -14), s(  -31,   -25), s(   18,   -21), s(  -60,   -56), s( -104,    13), s(  -45,   -93)],
    [s(    3,    -4), s(    4,   -14), s(    3,    -3), s(   25,    -5), s(    2,   -14), s(   87,   -35), s(    6,   -22), s(   61,   -27)],
    [s(    1,   -22), s(   14,    -1), s(   55,    42), s(   65,    44), s(  117,    22), s(  122,    14), s(   50,   -17), s(   45,   -39)],
    [s(    3,    -7), s(  -14,    21), s(   33,    57), s(   65,    58), s(   37,    60), s(   70,    55), s(    3,    19), s(   52,   -19)],
    [s(  -15,    -5), s(  -28,     7), s(   13,    58), s(   18,    59), s(   32,    63), s(   22,    48), s(   -1,     8), s(    1,   -18)],
    [s(  -39,   -27), s(  -43,    -1), s(   -2,    30), s(   10,    49), s(   28,    45), s(    8,    23), s(  -12,    -8), s(  -15,   -26)],
    [s(  -26,     0), s(  -35,   -19), s(  -47,    -4), s(  -20,    -3), s(  -22,    -2), s(  -21,   -10), s(  -10,   -32), s(   10,    13)],
    [s(  -44,     7), s(    2,   -11), s(  -42,   -28), s(  -21,   -23), s(  -17,   -19), s(   -8,   -35), s(    4,    -2), s(    1,   -13)],
];

pub const BISHOPS: PieceSquareTableDefinition = [
    [s(  -22,    10), s(  -66,    18), s(  -58,    13), s( -116,    29), s(  -85,    20), s(  -66,     5), s(  -34,     3), s(  -57,     3)],
    [s(  -17,   -10), s(   -2,    -5), s(  -13,    -4), s(  -35,     0), s(    5,   -15), s(    0,   -12), s(    0,    -1), s(   -2,   -10)],
    [s(   -3,    21), s(   18,     1), s(   11,     0), s(   32,   -16), s(   16,    -8), s(   70,    -7), s(   47,    -4), s(   43,    12)],
    [s(   -7,    12), s(   -3,    10), s(   14,    -2), s(   29,    15), s(   23,     1), s(   17,     4), s(    2,     3), s(   -6,    12)],
    [s(   -7,     4), s(  -12,     8), s(  -12,     9), s(   19,     3), s(   13,     5), s(   -9,     1), s(  -14,     5), s(   10,    -8)],
    [s(    6,     7), s(    3,     4), s(    3,     1), s(   -1,     1), s(    3,     5), s(    5,     1), s(    8,    -6), s(   25,    -5)],
    [s(   21,     9), s(   15,    -9), s(   17,   -21), s(   -6,    -1), s(    4,    -4), s(   21,   -13), s(   37,     1), s(   20,   -13)],
    [s(    8,    -3), s(   28,     5), s(   15,    -6), s(   -5,     1), s(    7,     1), s(    1,    11), s(   29,   -15), s(   24,   -20)],
];

pub const ROOKS: PieceSquareTableDefinition = [
    [s(   31,    11), s(    3,    24), s(    2,    37), s(    4,    30), s(   28,    20), s(   57,     9), s(   56,     7), s(   85,     0)],
    [s(    1,    16), s(   -5,    33), s(   18,    38), s(   43,    24), s(   27,    25), s(   64,     7), s(   61,    -1), s(  104,   -20)],
    [s(  -25,    16), s(    5,    18), s(   -4,    21), s(   -1,    18), s(   39,     0), s(   47,    -8), s(  114,   -21), s(   85,   -28)],
    [s(  -34,    19), s(  -21,    15), s(  -25,    26), s(  -18,    20), s(  -12,     1), s(    2,    -7), s(   19,   -11), s(   24,   -17)],
    [s(  -51,     8), s(  -54,    12), s(  -42,    13), s(  -31,    10), s(  -28,     5), s(  -38,     1), s(   -9,   -13), s(  -20,   -17)],
    [s(  -53,     2), s(  -51,     0), s(  -39,    -3), s(  -33,     0), s(  -23,    -7), s(  -21,   -19), s(   17,   -42), s(   -9,   -38)],
    [s(  -52,    -6), s(  -43,    -4), s(  -22,    -4), s(  -21,    -2), s(  -14,   -13), s(   -9,   -22), s(   11,   -32), s(  -26,   -23)],
    [s(  -28,    -5), s(  -25,    -4), s(  -12,     3), s(   -2,    -4), s(    5,   -13), s(   -5,    -9), s(    8,   -21), s(  -21,   -22)],
];

pub const QUEENS: PieceSquareTableDefinition = [
    [s(  -13,   -11), s(  -45,    26), s(  -18,    50), s(   24,    30), s(   27,    30), s(   36,    28), s(   96,   -51), s(   34,    -3)],
    [s(   -4,   -23), s(  -42,    17), s(  -39,    62), s(  -51,    85), s(  -43,   110), s(    9,    56), s(   -4,    33), s(   67,    21)],
    [s(   -3,   -16), s(  -15,    -5), s(  -23,    40), s(  -10,    50), s(    4,    65), s(   63,    40), s(   79,    -3), s(   84,     3)],
    [s(  -25,    -5), s(  -25,     6), s(  -28,    21), s(  -28,    41), s(  -29,    63), s(   -7,    53), s(    5,    46), s(   16,    37)],
    [s(  -19,   -13), s(  -31,    15), s(  -30,    10), s(  -20,    30), s(  -20,    25), s(  -20,    24), s(   -7,    20), s(    7,    18)],
    [s(  -19,   -26), s(  -14,   -16), s(  -17,    -3), s(  -17,   -12), s(  -12,    -5), s(   -6,    -4), s(    9,   -19), s(    8,   -21)],
    [s(   -4,   -37), s(  -10,   -37), s(    2,   -47), s(    8,   -43), s(    3,   -34), s(   17,   -69), s(   24,   -98), s(   52,  -122)],
    [s(  -11,   -38), s(   -8,   -46), s(    2,   -50), s(   12,   -30), s(    9,   -54), s(  -14,   -45), s(   21,   -78), s(   15,   -79)],
];

pub const KING: PieceSquareTableDefinition = [
    [s(   33,  -113), s(   16,   -44), s(   68,   -32), s( -137,    38), s(  -68,    12), s(    2,    14), s(   60,     3), s(  158,  -138)],
    [s( -138,    18), s(  -65,    57), s( -120,    74), s(   27,    48), s(  -48,    78), s(  -46,    95), s(   -4,    81), s(  -40,    37)],
    [s( -162,    39), s(   -8,    65), s( -102,    92), s( -127,   107), s(  -76,   106), s(   25,    96), s(   -8,    93), s(  -60,    52)],
    [s( -120,    25), s( -134,    73), s( -156,    99), s( -215,   116), s( -204,   116), s( -152,   108), s( -152,    96), s( -191,    60)],
    [s( -114,     8), s( -125,    52), s( -166,    86), s( -208,   106), s( -209,   106), s( -155,    86), s( -161,    70), s( -198,    47)],
    [s(  -58,    -6), s(  -36,    28), s( -113,    57), s( -132,    74), s( -123,    73), s( -120,    61), s(  -59,    34), s(  -83,    17)],
    [s(   62,   -34), s(    5,     3), s(  -15,    21), s(  -60,    36), s(  -64,    41), s(  -39,    27), s(   26,     1), s(   37,   -24)],
    [s(   46,   -83), s(   90,   -58), s(   58,   -30), s(  -71,    -5), s(   14,   -34), s(  -38,    -9), s(   63,   -47), s(   58,   -88)],
];

pub const KNIGHT_MOBILITY: [PhasedEval; 9] = [
    s(    0,     0),
    s(    0,     0),
    s(   38,   139),
    s(   89,   154),
    s(  115,   194),
    s(    0,     0),
    s(  151,   195),
    s(    0,     0),
    s(  136,   175),
];

pub const BISHOP_MOBILITY: [PhasedEval; 14] = [
    s(    0,     0),
    s(   56,    57),
    s(   74,    70),
    s(   84,   114),
    s(  101,   127),
    s(  109,   139),
    s(  126,   162),
    s(  138,   169),
    s(  147,   185),
    s(  149,   190),
    s(  156,   199),
    s(  160,   193),
    s(  161,   193),
    s(  198,   179),
];

pub const ROOK_MOBILITY: [PhasedEval; 15] = [
    s(    0,     0),
    s(    0,     0),
    s(  127,   255),
    s(  139,   271),
    s(  149,   282),
    s(  156,   287),
    s(  159,   292),
    s(  164,   300),
    s(  172,   302),
    s(  182,   306),
    s(  192,   313),
    s(  201,   315),
    s(  207,   321),
    s(  219,   325),
    s(  225,   326),
];

pub const QUEEN_MOBILITY: [PhasedEval; 28] = [
    s(    0,     0),
    s(    0,     0),
    s(    0,     0),
    s(  374,   117),
    s(  326,   240),
    s(  361,   325),
    s(  361,   366),
    s(  361,   449),
    s(  368,   469),
    s(  369,   494),
    s(  375,   502),
    s(  379,   518),
    s(  382,   533),
    s(  386,   538),
    s(  391,   545),
    s(  392,   557),
    s(  393,   567),
    s(  396,   577),
    s(  396,   586),
    s(  398,   593),
    s(  400,   606),
    s(  406,   605),
    s(  407,   609),
    s(  420,   605),
    s(  422,   604),
    s(  440,   603),
    s(  504,   566),
    s(  569,   547),
];

pub const BISHOP_PAIR_BONUS: PhasedEval = s(   27,    90);
