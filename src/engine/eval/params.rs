#![cfg_attr(any(), rustfmt::skip)]

use crate::chess::square::{File, Rank};
use crate::engine::eval::PhasedEval;

pub const fn s(mg: i16, eg: i16) -> PhasedEval {
    PhasedEval::new(mg, eg)
}

pub type PieceSquareTableDefinition = [[PhasedEval; File::N]; Rank::N];

pub const PIECE_VALUES: [PhasedEval; 6] = [
    s(  120,   175),
    s(  267,   317),
    s(  283,   350),
    s(  371,   605),
    s(  760,  1154),
    s(    0,     0),
];

pub const PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(    8,    84), s(   29,    76), s(   14,    76), s(   30,    39), s(   18,    38), s(   12,    50), s(  -29,    79), s(  -57,    88)],
    [s(  -21,    14), s(    1,    27), s(   30,    -4), s(   30,    10), s(   42,   -26), s(   96,   -16), s(   86,    27), s(   24,     3)],
    [s(  -41,     6), s(   -6,     7), s(   -8,   -11), s(   -3,   -31), s(   25,   -31), s(   16,   -21), s(   24,    -6), s(  -10,   -26)],
    [s(  -54,   -13), s(  -16,     0), s(  -13,   -20), s(    5,   -27), s(    8,   -28), s(    2,   -21), s(    3,   -15), s(  -29,   -38)],
    [s(  -51,   -18), s(  -21,    -5), s(  -16,   -20), s(  -12,   -14), s(    7,   -13), s(   -2,   -16), s(   27,   -20), s(  -18,   -42)],
    [s(  -48,   -15), s(  -18,    -2), s(  -25,   -12), s(  -21,    -1), s(   -8,     5), s(   14,   -12), s(   39,   -22), s(  -28,   -42)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHTS: PieceSquareTableDefinition = [
    [s( -110,   -64), s( -134,     4), s(  -81,    -9), s(  -34,   -23), s(   10,   -17), s(  -73,   -47), s( -108,     7), s(  -51,   -92)],
    [s(    2,     4), s(    6,   -14), s(   -2,    -6), s(   19,    -5), s(  -16,   -11), s(   65,   -33), s(    4,   -20), s(   46,   -17)],
    [s(    6,   -24), s(   18,    -6), s(   55,    41), s(   61,    46), s(   91,    30), s(   96,    19), s(   23,   -10), s(   20,   -31)],
    [s(    9,    -6), s(  -11,    16), s(   40,    56), s(   71,    57), s(   33,    63), s(   70,    56), s(  -18,    24), s(   50,   -18)],
    [s(   -7,    -5), s(  -23,     5), s(   22,    55), s(   25,    56), s(   40,    61), s(   29,    45), s(    1,     4), s(    7,   -19)],
    [s(  -32,   -28), s(  -36,    -6), s(    7,    27), s(   19,    47), s(   37,    43), s(   16,    19), s(   -8,   -14), s(   -7,   -28)],
    [s(  -19,     3), s(  -28,   -20), s(  -41,    -8), s(  -14,   -10), s(  -18,   -10), s(  -16,   -16), s(   -8,   -34), s(   15,    14)],
    [s(  -32,     8), s(    7,   -12), s(  -34,   -29), s(  -13,   -27), s(   -8,   -23), s(    1,   -39), s(   10,    -3), s(   12,    -6)],
];

pub const BISHOPS: PieceSquareTableDefinition = [
    [s(  -20,     7), s(  -67,    23), s(  -60,    13), s( -119,    28), s(  -90,    20), s(  -75,     9), s(  -36,    10), s(  -64,     5)],
    [s(  -16,    -4), s(   -1,    -7), s(  -11,    -4), s(  -33,    -1), s(    0,   -14), s(  -17,    -7), s(  -23,     2), s(  -18,    -4)],
    [s(    2,    16), s(   20,    -2), s(   16,    -5), s(   25,   -14), s(    6,    -7), s(   50,    -1), s(   29,     0), s(   22,    19)],
    [s(   -5,     9), s(    4,     5), s(   12,    -3), s(   29,    13), s(   20,     1), s(   17,     3), s(    6,    -1), s(   -8,    10)],
    [s(   -2,     5), s(  -11,     7), s(   -7,     6), s(   21,     4), s(   17,     2), s(   -2,    -2), s(   -8,     2), s(   14,    -9)],
    [s(    7,     8), s(    9,     4), s(    8,     1), s(    7,    -1), s(    9,     4), s(   11,    -3), s(   14,    -8), s(   29,    -5)],
    [s(   25,    11), s(   18,   -11), s(   24,   -23), s(    1,    -6), s(   11,    -8), s(   25,   -16), s(   41,    -4), s(   25,   -13)],
    [s(   11,    -5), s(   32,     4), s(   19,    -6), s(    3,    -2), s(   12,    -3), s(    8,     8), s(   29,   -16), s(   34,   -27)],
];

pub const ROOKS: PieceSquareTableDefinition = [
    [s(   16,    15), s(  -15,    29), s(  -21,    42), s(  -33,    40), s(  -18,    32), s(   18,    21), s(   21,    16), s(   50,     8)],
    [s(    5,    18), s(   -8,    34), s(   15,    39), s(   37,    27), s(   16,    28), s(   37,    14), s(   38,     4), s(   77,    -9)],
    [s(  -15,    15), s(   17,    14), s(    5,    17), s(    5,    14), s(   42,    -4), s(   45,    -9), s(  109,   -22), s(   67,   -24)],
    [s(  -23,    18), s(   -8,    11), s(  -11,    21), s(   -7,    14), s(   -2,    -3), s(   10,   -10), s(   21,   -10), s(   23,   -17)],
    [s(  -41,    10), s(  -41,    10), s(  -31,    10), s(  -20,     6), s(  -16,     1), s(  -31,     1), s(   -5,   -13), s(  -19,   -14)],
    [s(  -43,     2), s(  -39,    -2), s(  -26,    -6), s(  -22,    -3), s(  -11,   -11), s(  -16,   -19), s(   19,   -42), s(   -4,   -36)],
    [s(  -42,    -7), s(  -31,    -6), s(  -10,    -8), s(   -9,    -8), s(   -3,   -18), s(   -3,   -25), s(   13,   -36), s(  -20,   -25)],
    [s(  -18,    -6), s(  -14,    -7), s(    0,    -1), s(    9,    -8), s(   15,   -16), s(    3,   -13), s(   15,   -22), s(  -12,   -24)],
];

pub const QUEENS: PieceSquareTableDefinition = [
    [s(  -29,    -2), s(  -65,    31), s(  -55,    65), s(  -29,    50), s(  -46,    59), s(  -39,    60), s(   37,   -25), s(  -17,    16)],
    [s(    6,   -18), s(  -34,    15), s(  -37,    60), s(  -52,    85), s(  -70,   117), s(  -20,    59), s(  -27,    45), s(   45,    33)],
    [s(    7,   -18), s(   -4,    -8), s(  -11,    30), s(  -12,    45), s(  -10,    63), s(   11,    48), s(   37,    11), s(   12,    28)],
    [s(  -11,    -2), s(   -6,     3), s(  -13,    18), s(  -19,    44), s(  -17,    53), s(   -5,    43), s(    7,    41), s(   11,    28)],
    [s(    0,   -14), s(  -15,    15), s(  -10,     5), s(   -3,    25), s(   -1,    23), s(   -3,    17), s(    9,    11), s(   18,     9)],
    [s(   -2,   -27), s(    6,   -21), s(    3,    -7), s(    3,   -13), s(   10,    -8), s(   12,   -10), s(   26,   -28), s(   22,   -28)],
    [s(   14,   -39), s(   10,   -43), s(   22,   -51), s(   28,   -46), s(   23,   -37), s(   37,   -78), s(   42,  -111), s(   66,  -130)],
    [s(    7,   -41), s(   10,   -49), s(   22,   -54), s(   31,   -35), s(   28,   -58), s(    5,   -57), s(   35,   -87), s(   30,   -79)],
];

pub const KING: PieceSquareTableDefinition = [
    [s(   35,  -127), s(   29,   -54), s(   64,   -34), s( -116,    32), s(  -63,    11), s(    9,     9), s(   89,    -7), s(  184,  -148)],
    [s( -126,     8), s(  -26,    45), s(  -64,    59), s(   63,    41), s(    1,    66), s(    3,    82), s(   53,    65), s(   -6,    26)],
    [s( -146,    27), s(   34,    51), s(  -64,    79), s(  -90,    94), s(  -35,    94), s(   68,    83), s(   27,    80), s(  -33,    38)],
    [s( -100,    14), s(  -85,    58), s( -109,    86), s( -170,   103), s( -162,   105), s( -112,    96), s( -108,    81), s( -173,    47)],
    [s( -112,     4), s(  -81,    40), s( -119,    74), s( -168,    97), s( -152,    93), s( -106,    75), s( -115,    57), s( -197,    43)],
    [s(  -54,   -11), s(   -2,    19), s(  -67,    49), s(  -84,    65), s(  -73,    64), s(  -73,    51), s(  -24,    26), s(  -84,    15)],
    [s(   52,   -33), s(   16,     3), s(   -3,    20), s(  -47,    34), s(  -46,    38), s(  -28,    27), s(   31,     1), s(   25,   -22)],
    [s(   30,   -86), s(   74,   -56), s(   38,   -25), s(  -81,    -3), s(   -3,   -27), s(  -46,    -6), s(   47,   -43), s(   37,   -85)],
];

pub const PASSED_PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(   52,   170), s(   73,   162), s(   58,   162), s(   74,   125), s(   62,   124), s(   56,   136), s(   15,   165), s(  -13,   174)],
    [s(   25,   190), s(   42,   179), s(   27,   146), s(   11,    81), s(   15,   110), s(    9,   129), s(  -39,   145), s(  -60,   185)],
    [s(   17,    94), s(   13,    82), s(   23,    58), s(   18,    51), s(    2,    49), s(   16,    55), s(  -29,    85), s(  -26,   100)],
    [s(   -7,    50), s(  -18,    34), s(  -30,    26), s(  -19,    18), s(  -27,    21), s(  -15,    23), s(  -32,    48), s(  -20,    51)],
    [s(  -16,    -3), s(  -29,     2), s(  -41,     2), s(  -37,    -7), s(  -33,    -8), s(  -23,    -8), s(  -30,    21), s(   -8,     6)],
    [s(  -26,    -3), s(  -17,    -4), s(  -31,     0), s(  -39,    -6), s(  -18,   -25), s(  -15,   -15), s(    1,    -5), s(  -18,     6)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHT_MOBILITY: [PhasedEval; 9] = [
    s(    0,     0),
    s(    0,     0),
    s(   38,   140),
    s(   91,   154),
    s(  115,   196),
    s(    0,     0),
    s(  153,   201),
    s(    0,     0),
    s(  135,   179),
];

pub const BISHOP_MOBILITY: [PhasedEval; 14] = [
    s(    0,     0),
    s(   62,    70),
    s(   78,    72),
    s(   87,   116),
    s(  105,   129),
    s(  112,   143),
    s(  129,   166),
    s(  139,   175),
    s(  147,   190),
    s(  147,   197),
    s(  153,   206),
    s(  154,   202),
    s(  152,   204),
    s(  176,   197),
];

pub const ROOK_MOBILITY: [PhasedEval; 15] = [
    s(    0,     0),
    s(    0,     0),
    s(  133,   257),
    s(  145,   276),
    s(  155,   286),
    s(  162,   292),
    s(  165,   298),
    s(  169,   306),
    s(  177,   308),
    s(  186,   312),
    s(  195,   318),
    s(  203,   322),
    s(  206,   330),
    s(  215,   334),
    s(  214,   336),
];

pub const QUEEN_MOBILITY: [PhasedEval; 28] = [
    s(    0,     0),
    s(    0,     0),
    s(    0,     0),
    s(  361,   103),
    s(  335,   270),
    s(  366,   340),
    s(  364,   388),
    s(  364,   465),
    s(  370,   485),
    s(  371,   509),
    s(  377,   517),
    s(  381,   531),
    s(  384,   548),
    s(  387,   553),
    s(  391,   561),
    s(  392,   573),
    s(  392,   583),
    s(  394,   592),
    s(  393,   602),
    s(  394,   608),
    s(  395,   622),
    s(  398,   622),
    s(  398,   626),
    s(  408,   623),
    s(  409,   622),
    s(  421,   624),
    s(  484,   589),
    s(  552,   561),
];

pub const ATTACKED_KING_SQUARES: [PhasedEval; 9] = [
    s(   62,   -27),
    s(   56,   -19),
    s(   27,    -6),
    s(  -25,    -8),
    s( -116,    24),
    s( -231,    81),
    s( -349,   138),
    s( -511,   193),
    s( -281,   -85),
];

pub const BISHOP_PAIR_BONUS: PhasedEval = s(   30,    88);

pub const DOUBLED_PAWN: PhasedEval = s(  -24,   -49);
