#![cfg_attr(any(), rustfmt::skip)]

use crate::chess::square::{File, Rank};
use crate::engine::eval::PhasedEval;

pub const fn s(mg: i16, eg: i16) -> PhasedEval {
    PhasedEval::new(mg, eg)
}

pub type PieceSquareTableDefinition = [[PhasedEval; File::N]; Rank::N];

pub const PIECE_VALUES: [PhasedEval; 6] = [
    s(  106,   176),
    s(  275,   329),
    s(  284,   346),
    s(  380,   605),
    s(  774,  1153),
    s(    0,     0),
];

pub const PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(    9,    83), s(   26,    76), s(    7,    76), s(   23,    38), s(   10,    39), s(    7,    50), s(  -30,    78), s(  -54,    87)],
    [s(  -12,    13), s(  -10,    29), s(   16,    -1), s(   17,    12), s(   36,   -23), s(   88,   -17), s(   82,    28), s(   29,     3)],
    [s(  -38,     7), s(  -14,     8), s(  -15,   -11), s(  -15,   -30), s(   12,   -29), s(   14,   -23), s(   13,    -5), s(   -6,   -25)],
    [s(  -43,   -14), s(  -20,     1), s(  -14,   -21), s(   -1,   -29), s(    0,   -29), s(   -1,   -22), s(    1,   -15), s(  -21,   -38)],
    [s(  -45,   -18), s(  -13,    -8), s(  -16,   -20), s(  -11,   -14), s(   11,   -15), s(   -7,   -15), s(   32,   -21), s(  -14,   -41)],
    [s(  -35,   -16), s(   -9,    -4), s(  -11,   -16), s(  -13,    -8), s(    4,     1), s(   26,   -15), s(   47,   -23), s(  -15,   -43)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHTS: PieceSquareTableDefinition = [
    [s( -139,   -49), s( -144,    -9), s(  -83,     7), s(  -35,    -6), s(    4,     0), s(  -66,   -30), s( -121,    -5), s(  -82,   -76)],
    [s(   -3,    -4), s(    4,     5), s(   32,    -3), s(   48,    -2), s(   21,    -8), s(   94,   -30), s(   13,    -1), s(   41,   -24)],
    [s(    5,    -6), s(   37,    -3), s(   36,    17), s(   49,    20), s(   72,     6), s(   83,    -6), s(   40,    -8), s(   21,   -10)],
    [s(   11,    14), s(   13,    15), s(   33,    28), s(   69,    29), s(   34,    33), s(   60,    28), s(    5,    25), s(   53,     3)],
    [s(    0,    19), s(    3,     7), s(   10,    29), s(   25,    29), s(   29,    35), s(   28,    19), s(   31,     7), s(   16,    13)],
    [s(  -27,    -3), s(  -13,    -4), s(   -9,     2), s(   -6,    22), s(   13,    20), s(   -6,    -4), s(   13,    -7), s(   -5,    -1)],
    [s(  -27,    -1), s(  -25,     3), s(  -15,    -9), s(    8,    -6), s(    3,    -8), s(    3,   -12), s(   -7,    -8), s(   -2,    17)],
    [s(  -80,    16), s(   -8,   -17), s(  -36,   -12), s(  -15,   -11), s(   -9,    -5), s(   -7,   -18), s(   -6,    -7), s(  -37,     7)],
];

pub const BISHOPS: PieceSquareTableDefinition = [
    [s(  -21,    -2), s(  -76,    15), s(  -63,     7), s( -126,    22), s( -101,    14), s(  -85,     1), s(  -47,     3), s(  -67,    -7)],
    [s(  -14,   -13), s(    0,    -9), s(  -13,    -4), s(  -26,     1), s(   -1,   -12), s(  -17,    -6), s(  -25,     0), s(  -12,   -13)],
    [s(   -1,     8), s(   17,    -4), s(   16,     1), s(   23,    -9), s(    5,     0), s(   49,     4), s(   23,    -1), s(   16,    11)],
    [s(  -12,     3), s(   10,     7), s(   13,     3), s(   35,    21), s(   25,     9), s(   21,    11), s(   11,     2), s(  -13,     7)],
    [s(    1,    -2), s(  -13,     9), s(    0,    15), s(   25,    13), s(   23,    12), s(    1,     6), s(   -6,     6), s(   22,   -17)],
    [s(    7,     2), s(   15,     6), s(    7,     8), s(   15,    11), s(   15,    16), s(   12,     6), s(   15,    -8), s(   31,    -6)],
    [s(   38,    12), s(   12,   -13), s(   28,   -17), s(    2,    -3), s(   11,    -1), s(   25,   -14), s(   36,    -6), s(   33,   -10)],
    [s(   14,    -6), s(   36,     3), s(   17,   -12), s(    0,    -8), s(    6,   -12), s(    4,     4), s(   29,   -19), s(   41,   -24)],
];

pub const ROOKS: PieceSquareTableDefinition = [
    [s(    7,    15), s(  -20,    28), s(  -30,    43), s(  -42,    40), s(  -25,    31), s(   15,    19), s(   16,    16), s(   42,     8)],
    [s(   -3,    16), s(  -10,    32), s(    9,    38), s(   32,    25), s(   12,    26), s(   33,    14), s(   36,     3), s(   69,   -10)],
    [s(  -15,    16), s(   24,    14), s(   17,    17), s(   24,    14), s(   56,    -3), s(   61,   -10), s(  115,   -22), s(   72,   -25)],
    [s(  -23,    19), s(    0,    13), s(   -1,    23), s(    4,    17), s(   15,    -1), s(   18,    -8), s(   32,    -9), s(   25,   -16)],
    [s(  -43,    11), s(  -40,    12), s(  -29,    12), s(  -17,     8), s(  -16,     4), s(  -32,     4), s(    1,   -12), s(  -18,   -13)],
    [s(  -50,     2), s(  -38,    -3), s(  -29,    -6), s(  -27,    -3), s(  -17,   -10), s(  -20,   -19), s(   19,   -41), s(   -9,   -37)],
    [s(  -50,    -8), s(  -36,    -7), s(  -14,   -11), s(  -13,   -12), s(   -8,   -21), s(   -9,   -27), s(    8,   -36), s(  -28,   -26)],
    [s(  -27,   -10), s(  -19,   -10), s(   -3,    -5), s(    4,   -10), s(   11,   -20), s(   -4,   -17), s(   10,   -24), s(  -21,   -28)],
];

pub const QUEENS: PieceSquareTableDefinition = [
    [s(  -25,   -16), s(  -69,    27), s(  -58,    64), s(  -35,    52), s(  -52,    59), s(  -42,    54), s(   29,   -28), s(  -13,     2)],
    [s(    9,   -31), s(  -36,    13), s(  -41,    61), s(  -56,    87), s(  -74,   120), s(  -22,    59), s(  -30,    42), s(   53,    19)],
    [s(   11,   -23), s(   -2,    -6), s(   -9,    39), s(  -12,    56), s(  -10,    72), s(   17,    54), s(   37,    14), s(   17,    23)],
    [s(   -6,    -7), s(   -2,     8), s(  -14,    29), s(  -18,    58), s(  -16,    68), s(   -4,    53), s(   12,    49), s(   18,    23)],
    [s(    7,   -20), s(  -14,    17), s(  -10,    18), s(   -5,    40), s(   -4,    41), s(   -7,    32), s(   12,    16), s(   24,     6)],
    [s(    1,   -37), s(    7,   -20), s(   -4,     4), s(   -3,     5), s(    3,     8), s(    9,    -2), s(   25,   -27), s(   28,   -39)],
    [s(   19,   -54), s(    7,   -48), s(   18,   -49), s(   22,   -43), s(   19,   -36), s(   31,   -75), s(   38,  -113), s(   67,  -142)],
    [s(    9,   -57), s(   14,   -58), s(   23,   -62), s(   31,   -44), s(   28,   -67), s(    6,   -65), s(   33,   -94), s(   34,   -97)],
];

pub const KING: PieceSquareTableDefinition = [
    [s(   28,  -125), s(   22,   -53), s(   54,   -31), s( -119,    33), s(  -57,    10), s(    6,    11), s(   87,    -6), s(  184,  -147)],
    [s( -129,     8), s(  -30,    46), s(  -71,    61), s(   60,    42), s(    1,    66), s(    3,    83), s(   52,    66), s(   -4,    26)],
    [s( -148,    28), s(   28,    52), s(  -66,    80), s(  -92,    95), s(  -35,    94), s(   71,    83), s(   27,    81), s(  -31,    39)],
    [s( -101,    14), s(  -86,    59), s( -110,    86), s( -170,   104), s( -159,   105), s( -111,    97), s( -106,    81), s( -169,    47)],
    [s( -109,     4), s(  -82,    41), s( -118,    73), s( -166,    97), s( -150,    93), s( -105,    75), s( -111,    57), s( -195,    43)],
    [s(  -54,   -12), s(    0,    19), s(  -67,    49), s(  -84,    65), s(  -74,    64), s(  -74,    52), s(  -23,    26), s(  -83,    15)],
    [s(   51,   -33), s(   14,     4), s(   -3,    20), s(  -48,    34), s(  -48,    38), s(  -28,    27), s(   32,     1), s(   26,   -22)],
    [s(   30,   -86), s(   74,   -56), s(   39,   -24), s(  -79,    -4), s(   -1,   -27), s(  -45,    -7), s(   47,   -43), s(   36,   -85)],
];

pub const PASSED_PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(   46,   170), s(   63,   163), s(   44,   163), s(   60,   125), s(   47,   126), s(   44,   137), s(    7,   165), s(  -17,   174)],
    [s(   22,   191), s(   45,   177), s(   26,   145), s(   16,    80), s(    5,   109), s(    5,   131), s(  -44,   145), s(  -60,   184)],
    [s(   19,    92), s(    9,    82), s(   24,    57), s(   21,    50), s(    3,    48), s(   11,    56), s(  -33,    86), s(  -25,    99)],
    [s(   -8,    49), s(  -17,    33), s(  -32,    27), s(  -20,    20), s(  -27,    22), s(  -15,    23), s(  -29,    47), s(  -22,    51)],
    [s(  -14,    -4), s(  -34,     3), s(  -39,     1), s(  -37,    -7), s(  -35,    -7), s(  -17,    -9), s(  -34,    21), s(   -6,     4)],
    [s(  -26,    -4), s(  -21,    -3), s(  -35,     0), s(  -35,    -5), s(  -20,   -23), s(  -18,   -14), s(   -2,    -5), s(  -19,     5)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHT_MOBILITY: [PhasedEval; 9] = [
    s(  -85,   -16),
    s(   56,    78),
    s(   88,   123),
    s(  103,   154),
    s(  118,   168),
    s(  120,   185),
    s(  135,   189),
    s(  149,   193),
    s(  165,   186),
];

pub const BISHOP_MOBILITY: [PhasedEval; 14] = [
    s(   65,   -83),
    s(   38,    40),
    s(   86,   105),
    s(  101,   140),
    s(  119,   154),
    s(  130,   164),
    s(  139,   177),
    s(  146,   184),
    s(  149,   193),
    s(  153,   195),
    s(  157,   198),
    s(  170,   189),
    s(  173,   194),
    s(  177,   181),
];

pub const ROOK_MOBILITY: [PhasedEval; 15] = [
    s(   83,    83),
    s(  105,   196),
    s(  135,   254),
    s(  148,   273),
    s(  157,   285),
    s(  163,   294),
    s(  169,   301),
    s(  175,   309),
    s(  184,   309),
    s(  195,   314),
    s(  206,   318),
    s(  213,   325),
    s(  220,   331),
    s(  223,   333),
    s(  214,   332),
];

pub const QUEEN_MOBILITY: [PhasedEval; 28] = [
    s(    0,     0),
    s(    0,     0),
    s(  -45,   -17),
    s(  331,   124),
    s(  295,   408),
    s(  331,   452),
    s(  341,   476),
    s(  349,   495),
    s(  356,   515),
    s(  361,   549),
    s(  368,   555),
    s(  375,   563),
    s(  381,   574),
    s(  387,   574),
    s(  390,   580),
    s(  392,   590),
    s(  392,   594),
    s(  390,   607),
    s(  390,   614),
    s(  390,   617),
    s(  398,   621),
    s(  409,   606),
    s(  427,   604),
    s(  446,   587),
    s(  451,   593),
    s(  613,   512),
    s(  508,   554),
    s(  424,   580),
];

pub const ATTACKED_KING_SQUARES: [PhasedEval; 9] = [
    s(   62,   -25),
    s(   55,   -19),
    s(   26,    -6),
    s(  -27,    -9),
    s( -115,    22),
    s( -231,    81),
    s( -348,   136),
    s( -515,   196),
    s( -278,   -84),
];

pub const BISHOP_PAIR_BONUS: PhasedEval = s(   31,    91);

pub const DOUBLED_PAWN_MALUS: PhasedEval = s(  -20,   -49);
