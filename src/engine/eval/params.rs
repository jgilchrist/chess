#![cfg_attr(any(), rustfmt::skip)]

use crate::chess::square::{File, Rank};
use crate::engine::eval::PhasedEval;

pub const fn s(mg: i16, eg: i16) -> PhasedEval {
    PhasedEval::new(mg, eg)
}

pub type PieceSquareTableDefinition = [[PhasedEval; File::N]; Rank::N];

pub const PIECE_VALUES: [PhasedEval; 6] = [
    s(  116,   169),
    s(  266,   316),
    s(  280,   348),
    s(  368,   603),
    s(  755,  1150),
    s(    0,     0),
];

pub const PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(    7,    87), s(   26,    79), s(   13,    78), s(   31,    42), s(   19,    41), s(    9,    52), s(  -36,    81), s(  -58,    92)],
    [s(  -19,    22), s(    0,    24), s(   24,   -15), s(   29,     8), s(   38,   -31), s(   89,   -27), s(   82,    22), s(   25,     7)],
    [s(  -37,    12), s(   -5,     6), s(  -11,   -16), s(   -5,   -35), s(   23,   -35), s(   10,   -30), s(   24,    -8), s(   -6,   -20)],
    [s(  -49,    -6), s(  -14,     1), s(  -14,   -23), s(    5,   -25), s(    9,   -28), s(   -1,   -27), s(    4,   -14), s(  -25,   -31)],
    [s(  -46,   -12), s(  -19,    -4), s(  -18,   -26), s(  -11,   -15), s(    6,   -16), s(   -7,   -24), s(   25,   -19), s(  -12,   -35)],
    [s(  -42,    -7), s(  -15,     0), s(  -26,   -19), s(  -20,    -4), s(   -7,     2), s(   13,   -18), s(   40,   -20), s(  -22,   -35)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHTS: PieceSquareTableDefinition = [
    [s( -110,   -62), s( -133,     3), s(  -78,   -11), s(  -30,   -22), s(   12,   -17), s(  -69,   -48), s( -106,     8), s(  -47,   -91)],
    [s(    1,     3), s(    7,   -14), s(   -1,    -5), s(   17,    -4), s(  -14,   -12), s(   65,   -31), s(    5,   -18), s(   43,   -16)],
    [s(    6,   -24), s(   17,    -7), s(   56,    41), s(   62,    46), s(   91,    31), s(   96,    19), s(   21,   -10), s(   19,   -30)],
    [s(   10,    -7), s(  -12,    17), s(   39,    56), s(   71,    57), s(   32,    64), s(   69,    57), s(  -20,    24), s(   50,   -16)],
    [s(   -8,    -3), s(  -24,     5), s(   21,    55), s(   24,    57), s(   39,    62), s(   28,    45), s(   -1,     3), s(    6,   -18)],
    [s(  -32,   -27), s(  -38,    -6), s(    6,    28), s(   17,    48), s(   35,    42), s(   15,    20), s(  -10,   -14), s(   -8,   -27)],
    [s(  -20,     3), s(  -28,   -19), s(  -43,   -10), s(  -16,   -10), s(  -19,    -9), s(  -17,   -17), s(   -8,   -33), s(   14,    14)],
    [s(  -36,    10), s(    6,   -10), s(  -36,   -28), s(  -14,   -25), s(  -10,   -22), s(    0,   -38), s(    9,    -2), s(    9,    -9)],
];

pub const BISHOPS: PieceSquareTableDefinition = [
    [s(  -19,     9), s(  -65,    23), s(  -57,    14), s( -118,    29), s(  -88,    21), s(  -71,     9), s(  -36,    11), s(  -60,     6)],
    [s(  -16,    -4), s(    2,    -6), s(   -9,    -4), s(  -33,     0), s(    2,   -13), s(  -14,    -6), s(  -20,     3), s(  -20,    -3)],
    [s(    1,    17), s(   22,    -1), s(   17,    -4), s(   27,   -14), s(    7,    -7), s(   51,    -1), s(   29,     1), s(   22,    20)],
    [s(   -4,    11), s(    3,     6), s(   13,    -3), s(   30,    14), s(   22,     2), s(   18,     4), s(    6,     0), s(   -8,    12)],
    [s(   -3,     7), s(  -10,     7), s(   -8,     6), s(   22,     3), s(   17,     2), s(   -1,    -3), s(   -8,     3), s(   14,    -8)],
    [s(    7,     8), s(    8,     5), s(    8,     0), s(    6,    -2), s(   10,     3), s(   10,    -2), s(   14,    -8), s(   29,    -4)],
    [s(   24,    12), s(   19,   -10), s(   22,   -22), s(    1,    -5), s(   10,    -7), s(   26,   -16), s(   42,    -2), s(   25,   -12)],
    [s(   11,    -3), s(   30,     4), s(   19,    -6), s(    0,    -2), s(   12,    -2), s(    7,     7), s(   29,   -15), s(   34,   -26)],
];

pub const ROOKS: PieceSquareTableDefinition = [
    [s(   17,    14), s(  -15,    28), s(  -19,    42), s(  -30,    39), s(  -14,    31), s(   20,    21), s(   23,    16), s(   51,     8)],
    [s(    5,    17), s(   -7,    33), s(   17,    39), s(   38,    27), s(   18,    28), s(   38,    15), s(   39,     5), s(   75,    -9)],
    [s(  -17,    15), s(   16,    13), s(    6,    17), s(    8,    14), s(   44,    -3), s(   41,    -8), s(  107,   -22), s(   65,   -24)],
    [s(  -24,    17), s(   -9,    12), s(  -11,    21), s(   -5,    15), s(   -1,    -3), s(    7,    -9), s(   17,   -10), s(   22,   -18)],
    [s(  -41,     9), s(  -42,    10), s(  -32,    10), s(  -18,     7), s(  -16,     2), s(  -35,     1), s(   -8,   -13), s(  -20,   -14)],
    [s(  -43,     3), s(  -40,    -2), s(  -27,    -5), s(  -23,    -2), s(  -12,   -10), s(  -17,   -19), s(   18,   -42), s(   -5,   -36)],
    [s(  -42,    -6), s(  -32,    -5), s(  -10,    -8), s(  -10,    -7), s(   -4,   -17), s(   -4,   -24), s(   12,   -34), s(  -19,   -23)],
    [s(  -18,    -5), s(  -15,    -7), s(   -1,    -1), s(    8,    -6), s(   14,   -16), s(    2,   -12), s(   13,   -23), s(  -12,   -23)],
];

pub const QUEENS: PieceSquareTableDefinition = [
    [s(  -29,    -2), s(  -64,    29), s(  -52,    62), s(  -26,    48), s(  -44,    57), s(  -36,    58), s(   39,   -27), s(  -16,    15)],
    [s(    6,   -19), s(  -33,    15), s(  -35,    59), s(  -50,    81), s(  -68,   115), s(  -18,    59), s(  -25,    43), s(   45,    31)],
    [s(    8,   -19), s(   -3,   -10), s(  -11,    30), s(  -10,    45), s(   -8,    61), s(   11,    47), s(   36,    10), s(   12,    27)],
    [s(   -9,    -3), s(   -7,     4), s(  -13,    20), s(  -18,    43), s(  -17,    53), s(   -4,    43), s(    6,    41), s(   12,    28)],
    [s(    0,   -13), s(  -15,    16), s(  -11,     6), s(   -3,    27), s(   -1,    23), s(   -4,    17), s(    9,    13), s(   17,     8)],
    [s(   -3,   -26), s(    5,   -19), s(    2,    -6), s(    2,   -12), s(    9,    -7), s(   12,    -9), s(   25,   -26), s(   21,   -27)],
    [s(   13,   -38), s(    9,   -42), s(   21,   -50), s(   28,   -45), s(   22,   -36), s(   36,   -77), s(   42,  -109), s(   67,  -130)],
    [s(    7,   -41), s(    9,   -49), s(   21,   -54), s(   30,   -34), s(   26,   -57), s(    4,   -56), s(   33,   -85), s(   29,   -79)],
];

pub const KING: PieceSquareTableDefinition = [
    [s(   31,  -125), s(   24,   -53), s(   63,   -34), s( -116,    31), s(  -63,     9), s(    7,     8), s(   85,    -7), s(  183,  -149)],
    [s( -130,     8), s(  -25,    44), s(  -68,    60), s(   63,    40), s(   -1,    64), s(   -4,    83), s(   52,    63), s(  -11,    26)],
    [s( -150,    28), s(   30,    51), s(  -64,    79), s(  -93,    95), s(  -40,    94), s(   64,    83), s(   26,    79), s(  -33,    37)],
    [s( -108,    15), s(  -87,    59), s( -113,    86), s( -174,   104), s( -165,   105), s( -111,    96), s( -109,    81), s( -174,    47)],
    [s( -114,     4), s(  -83,    40), s( -121,    74), s( -169,    97), s( -153,    93), s( -106,    74), s( -113,    57), s( -196,    42)],
    [s(  -53,   -11), s(   -4,    20), s(  -69,    49), s(  -85,    65), s(  -71,    63), s(  -72,    50), s(  -23,    25), s(  -82,    14)],
    [s(   53,   -32), s(   16,     3), s(   -2,    20), s(  -48,    34), s(  -46,    37), s(  -27,    26), s(   33,     1), s(   27,   -23)],
    [s(   30,   -85), s(   75,   -55), s(   39,   -24), s(  -81,    -3), s(   -3,   -28), s(  -47,    -6), s(   48,   -42), s(   38,   -86)],
];

pub const PASSED_PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(   49,   170), s(   68,   162), s(   55,   161), s(   73,   125), s(   61,   124), s(   51,   135), s(    6,   164), s(  -16,   175)],
    [s(   21,   185), s(   37,   184), s(   28,   158), s(   10,    87), s(   13,   119), s(    7,   140), s(  -44,   151), s(  -67,   184)],
    [s(   11,    91), s(    7,    85), s(   24,    66), s(   18,    58), s(    1,    56), s(   15,    64), s(  -36,    87), s(  -30,    98)],
    [s(  -10,    48), s(  -19,    36), s(  -29,    33), s(  -17,    22), s(  -26,    27), s(  -13,    32), s(  -34,    51), s(  -24,    50)],
    [s(  -18,    -4), s(  -27,     4), s(  -36,    11), s(  -31,    -1), s(  -27,     0), s(  -18,     3), s(  -29,    24), s(   -9,     4)],
    [s(  -28,    -5), s(  -15,    -4), s(  -26,     6), s(  -32,     1), s(  -11,   -20), s(   -8,    -6), s(    4,    -4), s(  -19,     4)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHT_MOBILITY: [PhasedEval; 9] = [
    s(    0,     0),
    s(    0,     0),
    s(   38,   139),
    s(   90,   154),
    s(  114,   195),
    s(    0,     0),
    s(  153,   201),
    s(    0,     0),
    s(  134,   178),
];

pub const BISHOP_MOBILITY: [PhasedEval; 14] = [
    s(    0,     0),
    s(   60,    67),
    s(   76,    70),
    s(   86,   114),
    s(  103,   127),
    s(  111,   141),
    s(  127,   164),
    s(  137,   173),
    s(  146,   189),
    s(  146,   196),
    s(  152,   205),
    s(  153,   202),
    s(  151,   204),
    s(  175,   197),
];

pub const ROOK_MOBILITY: [PhasedEval; 15] = [
    s(    0,     0),
    s(    0,     0),
    s(  133,   261),
    s(  144,   277),
    s(  154,   288),
    s(  161,   293),
    s(  164,   298),
    s(  168,   305),
    s(  175,   307),
    s(  184,   311),
    s(  192,   317),
    s(  199,   321),
    s(  203,   329),
    s(  212,   333),
    s(  212,   334),
];

pub const QUEEN_MOBILITY: [PhasedEval; 28] = [
    s(    0,     0),
    s(    0,     0),
    s(    0,     0),
    s(  355,   100),
    s(  331,   266),
    s(  363,   336),
    s(  362,   388),
    s(  361,   464),
    s(  368,   485),
    s(  368,   507),
    s(  374,   515),
    s(  378,   529),
    s(  381,   546),
    s(  384,   550),
    s(  389,   558),
    s(  389,   570),
    s(  389,   580),
    s(  391,   590),
    s(  390,   600),
    s(  391,   607),
    s(  392,   619),
    s(  395,   619),
    s(  397,   623),
    s(  406,   620),
    s(  407,   620),
    s(  419,   621),
    s(  480,   587),
    s(  548,   559),
];

pub const ATTACKED_KING_SQUARES: [PhasedEval; 9] = [
    s(   61,   -26),
    s(   56,   -18),
    s(   27,    -5),
    s(  -25,    -8),
    s( -115,    24),
    s( -229,    80),
    s( -347,   137),
    s( -508,   190),
    s( -280,   -83),
];

pub const BISHOP_PAIR_BONUS: PhasedEval = s(   29,    86);
