#![cfg_attr(any(), rustfmt::skip)]

use crate::chess::square::{File, Rank};
use crate::engine::eval::PhasedEval;

pub const fn s(mg: i16, eg: i16) -> PhasedEval {
    PhasedEval::new(mg, eg)
}

pub type PieceSquareTableDefinition = [[PhasedEval; File::N]; Rank::N];

pub const PIECE_VALUES: [PhasedEval; 6] = [
    s(  115,   223),
    s(  268,   309),
    s(  282,   341),
    s(  371,   592),
    s(  763,  1129),
    s(    0,     0),
];

pub const PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(   63,   186), s(  103,   174), s(   72,   176), s(  107,   107), s(   87,   101), s(   67,   119), s(  -26,   181), s(  -69,   200)],
    [s(  -34,    99), s(  -11,   112), s(   29,    65), s(   33,    36), s(   40,    22), s(   71,     3), s(   49,    67), s(  -14,    62)],
    [s(  -50,    -2), s(  -15,   -16), s(  -15,   -42), s(   -9,   -55), s(   17,   -68), s(    4,   -63), s(   12,   -37), s(  -22,   -36)],
    [s(  -61,   -37), s(  -23,   -40), s(  -21,   -66), s(   -2,   -69), s(    3,   -73), s(   -7,   -72), s(   -5,   -53), s(  -37,   -64)],
    [s(  -58,   -47), s(  -28,   -43), s(  -25,   -67), s(  -18,   -53), s(    1,   -61), s(  -13,   -67), s(   16,   -57), s(  -23,   -70)],
    [s(  -54,   -42), s(  -24,   -38), s(  -33,   -58), s(  -26,   -41), s(  -12,   -40), s(    7,   -60), s(   31,   -58), s(  -34,   -69)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHTS: PieceSquareTableDefinition = [
    [s( -110,   -61), s( -136,     8), s(  -77,   -12), s(  -29,   -22), s(   14,   -16), s(  -67,   -51), s( -109,    17), s(  -47,   -90)],
    [s(    3,    -2), s(    9,   -14), s(   -1,    -6), s(   16,    -4), s(  -15,   -13), s(   65,   -33), s(    7,   -20), s(   48,   -22)],
    [s(    5,   -22), s(   15,    -6), s(   58,    42), s(   64,    46), s(   93,    31), s(   94,    22), s(   21,   -13), s(   19,   -30)],
    [s(    9,    -7), s(  -13,    16), s(   39,    56), s(   71,    58), s(   32,    65), s(   70,    56), s(  -21,    23), s(   50,   -16)],
    [s(   -8,    -5), s(  -24,     2), s(   22,    56), s(   25,    57), s(   39,    61), s(   28,    46), s(   -2,     3), s(    6,   -18)],
    [s(  -32,   -28), s(  -38,    -8), s(    6,    27), s(   17,    47), s(   36,    43), s(   15,    20), s(  -11,   -13), s(   -8,   -26)],
    [s(  -19,     0), s(  -28,   -21), s(  -44,   -11), s(  -17,    -9), s(  -20,    -8), s(  -18,   -17), s(   -8,   -32), s(   14,    14)],
    [s(  -36,     6), s(    6,   -11), s(  -36,   -29), s(  -15,   -24), s(  -11,   -20), s(   -1,   -37), s(   10,    -1), s(    8,   -14)],
];

pub const BISHOPS: PieceSquareTableDefinition = [
    [s(  -19,     9), s(  -63,    19), s(  -55,    13), s( -117,    30), s(  -91,    23), s(  -71,     9), s(  -36,     6), s(  -60,     5)],
    [s(  -15,   -11), s(    4,    -7), s(   -8,    -5), s(  -32,     0), s(    2,   -12), s(  -12,    -9), s(  -19,     3), s(  -16,    -6)],
    [s(    1,    19), s(   21,    -1), s(   16,    -2), s(   28,   -14), s(    8,    -5), s(   52,    -2), s(   31,     0), s(   22,    18)],
    [s(   -4,    10), s(    2,     8), s(   13,    -1), s(   29,    16), s(   22,     3), s(   17,     5), s(    6,     0), s(   -8,    12)],
    [s(   -3,     2), s(  -11,     8), s(   -9,     7), s(   21,     2), s(   17,     4), s(   -2,    -2), s(   -9,     4), s(   14,   -10)],
    [s(    7,     6), s(    7,     3), s(    8,    -1), s(    5,    -2), s(    9,     2), s(   10,    -1), s(   14,    -8), s(   30,    -6)],
    [s(   23,     9), s(   19,   -11), s(   21,   -23), s(    0,    -4), s(   10,    -6), s(   25,   -16), s(   41,    -1), s(   25,   -14)],
    [s(   11,    -4), s(   30,     4), s(   19,    -8), s(    0,    -2), s(   12,    -2), s(    7,     8), s(   30,   -17), s(   32,   -24)],
];

pub const ROOKS: PieceSquareTableDefinition = [
    [s(   17,    14), s(  -13,    27), s(  -18,    42), s(  -28,    39), s(  -14,    31), s(   24,    18), s(   27,    13), s(   52,     7)],
    [s(    4,    15), s(   -5,    32), s(   17,    39), s(   39,    26), s(   19,    27), s(   38,    14), s(   38,     4), s(   76,   -13)],
    [s(  -15,    13), s(   14,    16), s(    6,    19), s(    7,    16), s(   44,    -1), s(   40,    -6), s(  104,   -18), s(   64,   -23)],
    [s(  -22,    16), s(   -9,    11), s(  -12,    23), s(   -6,    17), s(   -1,    -2), s(    6,    -8), s(   16,   -10), s(   21,   -16)],
    [s(  -40,     5), s(  -43,     9), s(  -31,    10), s(  -19,     8), s(  -16,     2), s(  -35,     1), s(   -9,   -13), s(  -19,   -18)],
    [s(  -43,     0), s(  -40,    -3), s(  -27,    -6), s(  -23,    -2), s(  -12,    -9), s(  -17,   -20), s(   17,   -42), s(   -4,   -39)],
    [s(  -42,    -8), s(  -32,    -7), s(  -11,    -7), s(  -10,    -5), s(   -5,   -16), s(   -5,   -23), s(   11,   -34), s(  -19,   -26)],
    [s(  -18,    -6), s(  -15,    -6), s(   -1,     1), s(    8,    -6), s(   14,   -15), s(    2,   -12), s(   12,   -22), s(  -12,   -23)],
];

pub const QUEENS: PieceSquareTableDefinition = [
    [s(  -28,    -5), s(  -65,    31), s(  -51,    63), s(  -23,    46), s(  -38,    53), s(  -43,    63), s(   39,   -25), s(  -14,    12)],
    [s(    3,   -24), s(  -31,    13), s(  -35,    61), s(  -49,    82), s(  -67,   116), s(  -17,    60), s(  -22,    38), s(   48,    24)],
    [s(    6,   -18), s(   -5,    -7), s(  -10,    35), s(  -10,    50), s(   -8,    65), s(   11,    49), s(   37,     9), s(   12,    24)],
    [s(  -10,    -6), s(   -7,     3), s(  -14,    21), s(  -18,    46), s(  -18,    56), s(   -4,    44), s(    7,    39), s(   13,    24)],
    [s(    0,   -16), s(  -15,    15), s(  -12,    11), s(   -3,    29), s(   -1,    25), s(   -4,    18), s(    8,    13), s(   18,     5)],
    [s(   -3,   -26), s(    4,   -18), s(    1,    -4), s(    1,   -11), s(    8,    -6), s(   11,    -7), s(   25,   -24), s(   21,   -28)],
    [s(   13,   -41), s(    8,   -41), s(   20,   -48), s(   27,   -43), s(   22,   -34), s(   35,   -75), s(   41,  -106), s(   66,  -130)],
    [s(    7,   -42), s(    8,   -48), s(   20,   -51), s(   30,   -32), s(   26,   -55), s(    3,   -53), s(   34,   -83), s(   29,   -82)],
];

pub const KING: PieceSquareTableDefinition = [
    [s(   31,  -118), s(   13,   -47), s(   73,   -37), s( -124,    32), s(  -51,     7), s(    6,    11), s(   59,     0), s(  163,  -142)],
    [s( -124,    13), s(  -22,    48), s(  -78,    65), s(   70,    39), s(   -5,    69), s(   -4,    86), s(   28,    74), s(  -38,    35)],
    [s( -152,    35), s(   22,    58), s(  -76,    85), s(  -96,    99), s(  -44,    99), s(   53,    89), s(   12,    88), s(  -46,    47)],
    [s( -110,    21), s(  -93,    64), s( -118,    90), s( -176,   107), s( -164,   107), s( -115,    99), s( -116,    88), s( -184,    57)],
    [s( -103,     4), s(  -83,    43), s( -115,    74), s( -161,    95), s( -152,    93), s( -105,    75), s( -114,    60), s( -191,    44)],
    [s(  -54,   -10), s(   -1,    19), s(  -66,    47), s(  -83,    63), s(  -70,    61), s(  -71,    49), s(  -20,    24), s(  -81,    14)],
    [s(   51,   -35), s(   16,     0), s(   -1,    18), s(  -47,    32), s(  -45,    36), s(  -26,    24), s(   34,    -1), s(   27,   -24)],
    [s(   29,   -84), s(   76,   -56), s(   40,   -26), s(  -81,    -3), s(   -2,   -28), s(  -46,    -7), s(   48,   -43), s(   38,   -85)],
];

pub const KNIGHT_MOBILITY: [PhasedEval; 9] = [
    s(    0,     0),
    s(    0,     0),
    s(   40,   135),
    s(   90,   149),
    s(  115,   191),
    s(    0,     0),
    s(  154,   197),
    s(    0,     0),
    s(  134,   174),
];

pub const BISHOP_MOBILITY: [PhasedEval; 14] = [
    s(    0,     0),
    s(   63,    61),
    s(   77,    70),
    s(   86,   114),
    s(  104,   126),
    s(  111,   139),
    s(  128,   162),
    s(  138,   170),
    s(  147,   186),
    s(  148,   191),
    s(  153,   201),
    s(  155,   196),
    s(  152,   198),
    s(  179,   187),
];

pub const ROOK_MOBILITY: [PhasedEval; 15] = [
    s(    0,     0),
    s(    0,     0),
    s(  135,   258),
    s(  146,   274),
    s(  156,   284),
    s(  163,   289),
    s(  166,   294),
    s(  170,   301),
    s(  177,   303),
    s(  186,   307),
    s(  195,   313),
    s(  202,   316),
    s(  207,   322),
    s(  215,   327),
    s(  216,   328),
];

pub const QUEEN_MOBILITY: [PhasedEval; 28] = [
    s(    0,     0),
    s(    0,     0),
    s(    0,     0),
    s(  357,   100),
    s(  333,   260),
    s(  365,   337),
    s(  365,   382),
    s(  364,   461),
    s(  371,   480),
    s(  371,   502),
    s(  377,   510),
    s(  381,   524),
    s(  384,   539),
    s(  388,   544),
    s(  392,   550),
    s(  392,   562),
    s(  392,   571),
    s(  394,   581),
    s(  394,   590),
    s(  395,   596),
    s(  396,   608),
    s(  400,   607),
    s(  401,   610),
    s(  411,   606),
    s(  412,   605),
    s(  425,   605),
    s(  487,   570),
    s(  546,   548),
];

pub const ATTACKED_KING_SQUARES: [PhasedEval; 9] = [
    s(   61,   -27),
    s(   57,   -20),
    s(   27,    -6),
    s(  -26,    -8),
    s( -116,    24),
    s( -231,    83),
    s( -349,   139),
    s( -508,   195),
    s( -286,   -81),
];

pub const BISHOP_PAIR_BONUS: PhasedEval = s(   28,    88);
