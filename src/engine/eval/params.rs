#![cfg_attr(any(), rustfmt::skip)]

use crate::chess::piece::PieceKind;
use crate::chess::square::{File, Rank};
use crate::engine::eval::phased_eval::s;
use crate::engine::eval::PhasedEval;

pub type PieceSquareTableDefinition = [[PhasedEval; File::N]; Rank::N];

pub const PIECE_VALUES: [PhasedEval; PieceKind::N] = [
    s(  114,   224),
    s(  269,   306),
    s(  274,   329),
    s(  366,   592),
    s(  755,  1126),
    s(    0,     0)
];

pub const PAWNS: PieceSquareTableDefinition = [
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
    [s(   80,   183), s(  110,   171), s(   79,   173), s(  118,   104), s(   97,    97), s(   70,   113), s(  -25,   178), s(  -60,   197)],
    [s(  -31,    98), s(  -10,   109), s(   35,    61), s(   43,    31), s(   49,    19), s(   77,    -2), s(   47,    64), s(  -11,    61)],
    [s(  -52,    -2), s(  -16,   -17), s(  -11,   -44), s(  -10,   -57), s(   20,   -69), s(   10,   -65), s(   14,   -38), s(  -20,   -37)],
    [s(  -66,   -37), s(  -26,   -40), s(  -28,   -65), s(   -5,   -69), s(   -4,   -72), s(  -14,   -70), s(   -5,   -54), s(  -36,   -64)],
    [s(  -67,   -45), s(  -33,   -43), s(  -33,   -67), s(  -30,   -49), s(   -8,   -59), s(  -25,   -64), s(   17,   -57), s(  -26,   -70)],
    [s(  -67,   -39), s(  -32,   -37), s(  -38,   -57), s(  -50,   -46), s(  -22,   -41), s(   -1,   -57), s(   30,   -58), s(  -36,   -69)],
    [s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0), s(    0,     0)],
];

pub const KNIGHTS: PieceSquareTableDefinition = [
    [s( -119,   -62), s( -121,     8), s(  -63,   -18), s(  -16,   -29), s(   31,   -25), s(  -53,   -58), s(  -94,    16), s(  -43,   -96)],
    [s(   20,    -2), s(   12,   -17), s(   13,    -5), s(   38,    -7), s(   14,   -18), s(  101,   -39), s(    9,   -23), s(   74,   -24)],
    [s(    8,   -25), s(   20,    -2), s(   60,    39), s(   75,    41), s(  126,    18), s(  129,    10), s(   55,   -18), s(   46,   -40)],
    [s(    3,    -7), s(  -12,    21), s(   36,    55), s(   64,    58), s(   39,    60), s(   74,    51), s(    4,    20), s(   51,   -19)],
    [s(  -15,    -5), s(  -27,     7), s(    6,    59), s(    9,    59), s(   22,    63), s(   13,    48), s(   -3,    10), s(    1,   -18)],
    [s(  -40,   -27), s(  -43,     0), s(  -13,    32), s(   -8,    50), s(    9,    48), s(   -6,    27), s(  -14,    -7), s(  -17,   -25)],
    [s(  -29,     5), s(  -41,   -19), s(  -53,    -4), s(  -36,     1), s(  -35,    -1), s(  -32,    -7), s(  -16,   -32), s(    9,    19)],
    [s(  -44,     6), s(  -13,   -21), s(  -61,   -27), s(  -41,   -22), s(  -34,   -20), s(  -16,   -37), s(   -7,   -11), s(   -4,   -13)],
];

pub const BISHOPS: PieceSquareTableDefinition = [
    [s(  -26,    -6), s(  -53,     6), s(  -44,     2), s( -103,    19), s(  -78,    11), s(  -60,    -2), s(  -18,    -6), s(  -67,   -12)],
    [s(   -7,   -27), s(   19,    -5), s(    4,    -2), s(  -17,     3), s(   24,   -13), s(   20,    -9), s(   15,     1), s(    5,   -26)],
    [s(    4,    11), s(   28,     1), s(   25,    12), s(   52,    -6), s(   34,     3), s(   84,     4), s(   54,    -1), s(   45,     2)],
    [s(   -7,     5), s(    3,    20), s(   27,    10), s(   40,    35), s(   37,    20), s(   31,    17), s(    4,    14), s(   -4,     6)],
    [s(  -17,    -1), s(   -7,    17), s(   -7,    26), s(   23,    22), s(   17,    25), s(   -4,    18), s(   -6,    13), s(   -3,   -15)],
    [s(    1,    -2), s(    0,     9), s(   -2,    14), s(   -5,    15), s(   -2,    20), s(   -2,    16), s(    5,    -4), s(   19,   -15)],
    [s(    3,    -5), s(    4,   -10), s(    9,   -17), s(  -19,     3), s(   -6,     4), s(    9,    -9), s(   26,    -2), s(    8,   -33)],
    [s(  -21,   -30), s(    0,    -7), s(  -17,   -35), s(  -30,    -7), s(  -23,   -10), s(  -23,   -10), s(    7,   -27), s(   -7,   -49)],
];

pub const ROOKS: PieceSquareTableDefinition = [
    [s(   28,    12), s(    7,    23), s(   14,    34), s(   21,    27), s(   46,    16), s(   74,     5), s(   58,     6), s(   88,    -2)],
    [s(   11,    13), s(    7,    28), s(   32,    33), s(   59,    20), s(   40,    21), s(   78,     1), s(   71,    -4), s(  114,   -22)],
    [s(  -15,    14), s(   15,    17), s(   14,    18), s(   13,    16), s(   53,    -3), s(   63,   -11), s(  118,   -22), s(   91,   -29)],
    [s(  -31,    18), s(  -14,    15), s(  -13,    26), s(   -9,    22), s(    0,     1), s(   11,    -7), s(   24,   -11), s(   28,   -18)],
    [s(  -57,     8), s(  -58,    14), s(  -46,    15), s(  -33,    14), s(  -31,     7), s(  -45,     4), s(   -9,   -13), s(  -19,   -19)],
    [s(  -64,     1), s(  -57,    -1), s(  -49,    -2), s(  -49,     4), s(  -39,    -3), s(  -39,   -15), s(   11,   -42), s(  -16,   -40)],
    [s(  -66,    -8), s(  -54,    -4), s(  -36,    -3), s(  -40,    -1), s(  -32,   -13), s(  -26,   -21), s(   -1,   -33), s(  -39,   -24)],
    [s(  -37,   -12), s(  -41,    -3), s(  -30,     4), s(  -23,    -1), s(  -15,   -11), s(  -22,   -12), s(   -4,   -19), s(  -29,   -28)],
];

pub const QUEENS: PieceSquareTableDefinition = [
    [s(  -36,    -5), s(  -39,    19), s(    2,    41), s(   48,    21), s(   46,    19), s(   56,    11), s(   95,   -54), s(   20,    -6)],
    [s(    4,   -42), s(  -33,    13), s(  -24,    58), s(  -34,    81), s(  -28,   108), s(   25,    51), s(   -2,    32), s(   63,     6)],
    [s(    2,   -28), s(   -7,    -5), s(   -9,    47), s(   10,    50), s(   19,    70), s(   78,    42), s(   83,    -6), s(   82,   -16)],
    [s(  -22,   -10), s(  -18,    12), s(  -14,    31), s(  -17,    59), s(  -16,    80), s(    7,    60), s(    7,    48), s(   17,    26)],
    [s(  -17,   -19), s(  -25,    19), s(  -27,    25), s(  -14,    47), s(  -17,    44), s(  -18,    37), s(   -1,    18), s(    6,     7)],
    [s(  -22,   -32), s(  -14,   -14), s(  -23,    12), s(  -24,     3), s(  -19,    10), s(  -10,     4), s(    9,   -22), s(    2,   -32)],
    [s(  -20,   -40), s(  -17,   -37), s(   -4,   -45), s(   -5,   -33), s(   -7,   -28), s(    6,   -65), s(   16,  -101), s(   34,  -133)],
    [s(  -20,   -50), s(  -36,   -42), s(  -27,   -40), s(   -8,   -49), s(  -19,   -47), s(  -35,   -45), s(   -3,   -83), s(   -6,   -85)],
];

pub const KING: PieceSquareTableDefinition = [
    [s(   23,  -111), s(   -7,   -41), s(   44,   -28), s( -156,    42), s(  -76,    13), s(   -5,    16), s(   59,     6), s(  151,  -134)],
    [s( -139,    19), s(  -79,    59), s( -137,    77), s(   12,    50), s(  -65,    80), s(  -58,    96), s(   -4,    82), s(  -32,    38)],
    [s( -170,    40), s(  -20,    66), s( -115,    93), s( -141,   108), s(  -88,   107), s(   19,    96), s(   -9,    94), s(  -60,    53)],
    [s( -124,    25), s( -141,    74), s( -160,    99), s( -222,   117), s( -205,   116), s( -154,   108), s( -153,    96), s( -188,    60)],
    [s( -114,     8), s( -127,    52), s( -170,    86), s( -209,   107), s( -208,   106), s( -156,    87), s( -160,    71), s( -199,    48)],
    [s(  -55,    -7), s(  -32,    27), s( -111,    57), s( -132,    74), s( -123,    74), s( -120,    61), s(  -54,    34), s(  -79,    17)],
    [s(   65,   -37), s(   10,     2), s(   -9,    20), s(  -58,    35), s(  -60,    40), s(  -35,    27), s(   32,     0), s(   43,   -24)],
    [s(   57,   -87), s(   90,   -59), s(   58,   -32), s(  -82,    -6), s(    8,   -40), s(  -47,    -8), s(   66,   -46), s(   67,   -87)],
];

pub const KNIGHT_MOBILITY: [PhasedEval; 9] = [
    s(    0,     0),
    s(    0,     0),
    s(   38,   138),
    s(   82,   149),
    s(  113,   194),
    s(    0,     0),
    s(  148,   194),
    s(    0,     0),
    s(  136,   175)
];

pub const BISHOP_MOBILITY: [PhasedEval; 14] = [
    s(    0,     0),
    s(  123,   178),
    s(  116,   158),
    s(  119,   166),
    s(  125,   171),
    s(  127,   168),
    s(  135,   179),
    s(  141,   181),
    s(  147,   187),
    s(  148,   187),
    s(  153,   191),
    s(  158,   181),
    s(  158,   176),
    s(  194,   157)
];

pub const ROOK_MOBILITY: [PhasedEval; 15] = [
    s(    0,     0),
    s(    0,     0),
    s(  154,   314),
    s(  164,   308),
    s(  168,   310),
    s(  172,   307),
    s(  172,   309),
    s(  174,   310),
    s(  179,   310),
    s(  186,   310),
    s(  194,   313),
    s(  200,   316),
    s(  207,   319),
    s(  222,   322),
    s(  227,   321)
];

pub const QUEEN_MOBILITY: [PhasedEval; 28] = [
    s(    0,     0),
    s(    0,     0),
    s(    0,     0),
    s(  376,   516),
    s(  345,   541),
    s(  378,   537),
    s(  375,   540),
    s(  375,   545),
    s(  384,   545),
    s(  384,   551),
    s(  386,   553),
    s(  387,   554),
    s(  388,   561),
    s(  387,   565),
    s(  390,   567),
    s(  391,   568),
    s(  388,   578),
    s(  389,   583),
    s(  391,   582),
    s(  390,   589),
    s(  391,   591),
    s(  396,   584),
    s(  404,   580),
    s(  419,   569),
    s(  419,   569),
    s(  445,   564),
    s(  433,   572),
    s(  585,   513)
];

pub const BISHOP_PAIR_BONUS: PhasedEval = s(   29,    92);
